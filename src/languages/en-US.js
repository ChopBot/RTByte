const { Language, util } = require('klasa');

module.exports = class extends Language {

	constructor(...args) {
		super(...args);
		this.presenceTypes = {
			PLAYING: 'Playing',
			LISTENING: 'Listening to',
			WATCHING: 'Watching'
		};
		this.language = {
			DEFAULT: (key) => `${key} has not been localized for en-US yet.`,
			DEFAULT_LANGUAGE: 'Default language',
			PREFIX_REMINDER: (prefix = `@${this.client.user.tag}`) => `The prefix${Array.isArray(prefix) ?
				`es for this guild are: ${prefix.map(pre => `\`${pre}\``).join(', ')}` :
				` in this guild is set to: \`${prefix}\``
			}`,
			DISPLAY_NAME: 'Display Name',

			SETTING_GATEWAY_EXPECTS_GUILD: 'The parameter <Guild> expects either a Guild or a Guild Object.',
			SETTING_GATEWAY_VALUE_FOR_KEY_NOEXT: (data, key) => `The value ${data} for the key ${key} does not exist.`,
			SETTING_GATEWAY_VALUE_FOR_KEY_ALREXT: (data, key) => `The value ${data} for the key ${key} already exists.`,
			SETTING_GATEWAY_SPECIFY_VALUE: 'You must specify the value to add or filter.',
			SETTING_GATEWAY_KEY_NOT_ARRAY: (key) => `The key ${key} is not an array.`,
			SETTING_GATEWAY_KEY_NOEXT: (key) => `The key ${key} does not exist in the current data schema.`,
			SETTING_GATEWAY_INVALID_TYPE: 'The type parameter must be either add or remove.',
			SETTING_GATEWAY_INVALID_FILTERED_VALUE: (piece, value) => `${piece.key} doesn't accept the value: ${value}`,

			RESOLVER_MULTI_TOO_FEW: (name, min = 1) => `Provided too few ${name}s. At least ${min} ${min === 1 ? 'is' : 'are'} required.`,
			RESOLVER_INVALID_BOOL: (name) => `${name} must be true or false.`,
			RESOLVER_INVALID_CHANNEL: (name) => `${name} must be a channel tag or valid channel ID.`,
			RESOLVER_INVALID_CUSTOM: (name, type) => `${name} must be a valid ${type}.`,
			RESOLVER_INVALID_DATE: (name) => `${name} must be a valid date.`,
			RESOLVER_INVALID_DURATION: (name) => `${name} must be a valid duration string.`,
			RESOLVER_INVALID_EMOJI: (name) => `${name} must be a custom emoji tag or valid emoji ID.`,
			RESOLVER_INVALID_FLOAT: (name) => `${name} must be a valid number.`,
			RESOLVER_INVALID_GUILD: (name) => `${name} must be a valid guild ID.`,
			RESOLVER_INVALID_INT: (name) => `${name} must be an integer.`,
			RESOLVER_INVALID_LITERAL: (name) => `Your option did not match the only possibility: ${name}`,
			RESOLVER_INVALID_MEMBER: (name) => `${name} must be a mention or valid user ID.`,
			RESOLVER_INVALID_MESSAGE: (name) => `${name} must be a valid message ID.`,
			RESOLVER_INVALID_PIECE: (name, piece) => `${name} must be a valid ${piece} name.`,
			RESOLVER_INVALID_REGEX_MATCH: (name, pattern) => `${name} must follow this regex pattern \`${pattern}\`.`,
			RESOLVER_INVALID_ROLE: (name) => `${name} must be a role mention or role ID.`,
			RESOLVER_INVALID_STRING: (name) => `${name} must be a valid string.`,
			RESOLVER_INVALID_TIME: (name) => `${name} must be a valid duration or date string.`,
			RESOLVER_INVALID_URL: (name) => `${name} must be a valid URL.`,
			RESOLVER_INVALID_USER: (name) => `${name} must be a mention or valid user ID.`,
			RESOLVER_STRING_SUFFIX: ' characters',
			RESOLVER_MINMAX_EXACTLY: (name, min, suffix) => `${name} must be exactly ${min}${suffix}.`,
			RESOLVER_MINMAX_BOTH: (name, min, max, suffix) => `${name} must be between ${min} and ${max}${suffix}.`,
			RESOLVER_MINMAX_MIN: (name, min, suffix) => `${name} must be greater than ${min}${suffix}.`,
			RESOLVER_MINMAX_MAX: (name, max, suffix) => `${name} must be less than ${max}${suffix}.`,

			REACTIONHANDLER_PROMPT: 'Which page would you like to jump to?',

			COMMANDMESSAGE_MISSING: 'Missing one or more required arguments after end of input.',
			COMMANDMESSAGE_MISSING_REQUIRED: (name) => `${name} is a required argument.`,
			COMMANDMESSAGE_MISSING_OPTIONALS: (possibles) => `Missing a required option: (${possibles})`,
			COMMANDMESSAGE_NOMATCH: (possibles) => `Your option didn't match any of the possibilities: (${possibles})`,

			// eslint-disable-next-line max-len
			MONITOR_COMMAND_HANDLER_REPROMPT: (tag, error, time, abortOptions) => `${tag} | **${error}** | You have **${time}** seconds to respond to this prompt with a valid argument. Type **${abortOptions.join('**, **')}** to abort this prompt.`,
			// eslint-disable-next-line max-len
			MONITOR_COMMAND_HANDLER_REPEATING_REPROMPT: (tag, name, time, cancelOptions) => `${tag} | **${name}** is a repeating argument | You have **${time}** seconds to respond to this prompt with additional valid arguments. Type **${cancelOptions.join('**, **')}** to cancel this prompt.`,
			MONITOR_COMMAND_HANDLER_ABORTED: 'Aborted',
			MONITOR_COMMAND_HANDLER_POSSIBILITIES: ['abort', 'stop'],
			MONITOR_COMMAND_HANDLER_REPEATING_POSSIBLITIES: ['cancel'],
			MONITOR_MODERATION_AUTO_BOILERPLATE: (guild) => `This action was automatically performed. If you have any questions regarding this, please contact a moderator of the ${guild.name} Discord.`,

			INHIBITOR_COOLDOWN: (remaining) => `You have just used this command. You can use this command again in ${remaining} second${remaining === 1 ? '' : 's'}.`,
			INHIBITOR_DISABLED_GUILD: 'This command has been disabled by an admin in this guild.',
			INHIBITOR_DISABLED_GLOBAL: 'This command has been globally disabled by a bot owner.',
			INHIBITOR_MISSING_BOT_PERMS: (missing) => `Insufficient permissions, missing: **${missing}**`,
			INHIBITOR_NSFW: 'You can only use NSFW commands in NSFW channels.',
			INHIBITOR_PERMISSIONS: 'You do not have permission to use this command.',
			INHIBITOR_REQUIRED_SETTINGS: (settings) => `The guild is missing the **${settings.join(', ')}** guild setting${settings.length !== 1 ? 's' : ''} and thus the command cannot run.`,
			INHIBITOR_RUNIN: (types) => `This command is only available in ${types} channels.`,
			INHIBITOR_RUNIN_NONE: (name) => `The ${name} command is not configured to run in any channel.`,

			COMMAND_BLACKLIST_DESCRIPTION: 'Blacklists or un-blacklists users and guilds from the bot.',
			COMMAND_BLACKLIST_SUCCESS: (usersAdded, usersRemoved, guildsAdded, guildsRemoved) => [
				usersAdded.length ? `**Users Added**\n${util.codeBlock('', usersAdded.join(', '))}` : '',
				usersRemoved.length ? `**Users Removed**\n${util.codeBlock('', usersRemoved.join(', '))}` : '',
				guildsAdded.length ? `**Guilds Added**\n${util.codeBlock('', guildsAdded.join(', '))}` : '',
				guildsRemoved.length ? `**Guilds Removed**\n${util.codeBlock('', guildsRemoved.join(', '))}` : ''
			].filter(val => val !== '').join('\n'),
			COMMAND_EVAL_DESCRIPTION: 'Evaluates arbitrary JS. Reserved for bot owners.',
			COMMAND_EVAL_EXTENDEDHELP: [
				'The eval command evaluates code as-in, any error thrown from it will be handled.',
				'It also uses the flags feature. Write --silent, --depth=number or --async to customize the output.',
				'The --silent flag will make it output nothing.',
				"The --depth flag accepts a number, for example, --depth=2, to customize util.inspect's depth.",
				'The --async flag will wrap the code into an async function where you can enjoy the use of await, however, if you want to return something, you will need the return keyword.',
				'The --showHidden flag will enable the showHidden option in util.inspect.',
				'If the output is too large, it\'ll send the output as a file, or in the console if the bot does not have the ATTACH_FILES permission.'
			].join('\n'),
			COMMAND_EVAL_ERROR: (time, output, type) => `**Error**:${output}\n**Type**:${type}\n${time}`,
			COMMAND_EVAL_OUTPUT: (time, output, type) => `**Output**:${output}\n**Type**:${type}\n${time}`,
			COMMAND_EVAL_SENDFILE: (time, type) => `Output was too long... sent the result as a file.\n**Type**:${type}\n${time}`,
			COMMAND_EVAL_SENDCONSOLE: (time, type) => `Output was too long... sent the result to console.\n**Type**:${type}\n${time}`,
			COMMAND_UNLOAD: (type, name) => `Unloaded ${type}: ${name}`,
			COMMAND_UNLOAD_DESCRIPTION: 'Unloads the klasa piece.',
			COMMAND_UNLOAD_WARN: 'You probably don\'t want to unload that, since you wouldn\'t be able to run any command to enable it again.',
			COMMAND_TRANSFER_ERROR: 'That file has been transfered already or never existed.',
			COMMAND_TRANSFER_SUCCESS: (type, name) => `Successfully transferred ${type}: ${name}.`,
			COMMAND_TRANSFER_FAILED: (type, name) => `Transfer of ${type}: ${name} to client has failed. Please check your console.`,
			COMMAND_TRANSFER_DESCRIPTION: 'Transfers a core piece to its respective folder.',
			COMMAND_RELOAD: (type, name, time) => `Reloaded ${type}: ${name}. (Took: ${time})`,
			COMMAND_RELOAD_FAILED: (type, name) => `Failed to reload ${type}: ${name}. Please check your console.`,
			COMMAND_RELOAD_ALL: (type, time) => `Reloaded all ${type}. (Took: ${time})`,
			COMMAND_RELOAD_EVERYTHING: (time) => `Reloaded everything. (Took: ${time})`,
			COMMAND_RELOAD_DESCRIPTION: 'Reloads a klasa piece, or all pieces of a klasa store.',
			COMMAND_REBOOT: 'Rebooting...',
			COMMAND_REBOOT_DESCRIPTION: 'Reboots the bot.',
			COMMAND_LOAD: (time, type, name) => `Successfully loaded ${type}: ${name}. (Took: ${time})`,
			COMMAND_LOAD_FAIL: 'The file does not exist, or an error occurred while loading your file. Please check your console.',
			COMMAND_LOAD_ERROR: (type, name, error) => `Failed to load ${type}: ${name}. Reason:${util.codeBlock('js', error)}`,
			COMMAND_LOAD_DESCRIPTION: 'Load a piece from your bot.',
			COMMAND_PING: 'Ping?',
			COMMAND_PING_DESCRIPTION: 'Runs a connection test to Discord.',
			COMMAND_PINGPONG: (diff, ping) => `Pong! \`${ping}ms\``,
			COMMAND_INVITE: () => [
				`To add ${this.client.user.username} to your discord guild:`,
				`<${this.client.invite}>`,
				util.codeBlock('', [
					'The above link is generated requesting the minimum permissions required to use every command currently.',
					'I know not all permissions are right for every guild, so don\'t be afraid to uncheck any of the boxes.',
					'If you try to use a command that requires more permissions than the bot is granted, it will let you know.'
				].join(' ')),
				'Please file an issue at <https://github.com/dirigeants/klasa> if you find any bugs.'
			],
			COMMAND_INVITE_DESCRIPTION: 'Displays the join guild link of the bot.',
			COMMAND_INFO: [
				"Klasa is a 'plug-and-play' framework built on top of the Discord.js library.",
				'Most of the code is modularized, which allows developers to edit Klasa to suit their needs.',
				'',
				'Some features of Klasa include:',
				'• 🐇💨 Fast loading times with ES2017 support (`async`/`await`)',
				'• 🎚🎛 Per-client/guild/user settings that can be extended with your own fields',
				'• 💬 Customizable command system with automated parameter resolving and the ability to load/reload commands on-the-fly',
				'• 👀 "Monitors", which can watch messages and edits (for swear filters, spam protection, etc.)',
				'• ⛔ "Inhibitors", which can prevent commands from running based on any condition you wish to apply (for permissions, blacklists, etc.)',
				'• 🗄 "Providers", which simplify usage of any database of your choosing',
				'• ✅ "Finalizers", which run after successful commands (for logging, collecting stats, cleaning up responses, etc.)',
				'• ➕ "Extendables", which passively add methods, getters/setters, or static properties to existing Discord.js or Klasa classes',
				'• 🌐 "Languages", which allow you to localize your bot\'s responses',
				'• ⏲ "Tasks", which can be scheduled to run in the future, optionally repeating',
				'',
				'We hope to be a 100% customizable framework that can cater to all audiences. We do frequent updates and bugfixes when available.',
				"If you're interested in us, check us out at https://klasa.js.org"
			],
			COMMAND_INFO_DESCRIPTION: 'Provides some information about this bot.',
			COMMAND_HELP_DESCRIPTION: 'Display help for a command.',
			COMMAND_HELP_NO_EXTENDED: 'No extended help available.',
			COMMAND_HELP_DM: 'The list of commands you have access to has been sent to your DMs.',
			COMMAND_HELP_NODM: 'You have DMs disabled, I couldn\'t send you the commands in DMs.',
			COMMAND_HELP_USAGE: (usage) => `Usage :: ${usage}`,
			COMMAND_HELP_EXTENDED: 'Extended Help ::',
			COMMAND_ENABLE: (type, name) => `Successfully enabled ${name} ${type}.`,
			COMMAND_ENABLE_DESCRIPTION: 'Re-enables or temporarily enables a command/inhibitor/monitor/finalizer. Default state restored on reboot.',
			COMMAND_DISABLE: (type, name) => `Successfully disabled ${name} ${type}.`,
			COMMAND_DISABLE_DESCRIPTION: 'Re-disables or temporarily disables a command/inhibitor/monitor/finalizer/event. Default state restored on reboot.',
			COMMAND_DISABLE_WARN: 'You probably don\'t want to disable that, since you wouldn\'t be able to run any command to enable it again.',
			COMMAND_CONF_NOKEY: 'You must provide a key',
			COMMAND_CONF_NOVALUE: 'You must provide a value',
			COMMAND_CONF_GUARDED: (name) => `${util.toTitleCase(name)} may not be disabled.`,
			COMMAND_CONF_UPDATED: (key, response) => `Successfully updated the key **${key}**: \`${response}\``,
			COMMAND_CONF_KEY_NOT_ARRAY: 'This key is not array type. Use the action \'reset\' instead.',
			COMMAND_CONF_GET_NOEXT: (key) => `The key **${key}** does not seem to exist.`,
			COMMAND_CONF_GET: (key, value) => `The value for the key **${key}** is: \`${value}\``,
			COMMAND_CONF_RESET: (key, response) => `The key **${key}** has been reset to: \`${response}\``,
			COMMAND_CONF_NOCHANGE: (key) => `The value for **${key}** was already that value.`,
			COMMAND_CONF_SERVER_DESCRIPTION: 'Define per-guild settings.',
			COMMAND_CONF_SERVER: (key, list) => `**Guild Settings${key}**\n${list}`,
			COMMAND_CONF_USER_DESCRIPTION: 'Define per-user settings.',
			COMMAND_CONF_USER: (key, list) => `**User Settings${key}**\n${list}`,
			COMMAND_STATS_DESCRIPTION: 'Provides bot owners with statistics.',
			COMMAND_STATS_EMBEDTITLE: 'RTByte Stats',
			COMMAND_STATS_MEMUSAGE: 'Memory usage',
			COMMAND_STATS_UPTIME: 'Uptime',
			COMMAND_STATS_CONNECTIONS: 'Connections',
			COMMAND_STATS_LIBRARIES: 'Libraries',
			COMMAND_STATS_HOSTINFO: 'Host information',
			COMMAND_STATS_HOSTUPTIME: 'Host uptime',
			COMMAND_MODERATION_BOILERPLATE: (guild) => `This action was performed by a moderator of the ${guild.name} Discord.`,
			COMMAND_MODERATION_SILENT: 'Silent action',
			COMMAND_BAN_DESCRIPTION: 'Bans a mentioned user and logs the reason.',
			COMMAND_BAN_NO_BAN_SELF: 'You cannot ban yourself.',
			COMMAND_BAN_NO_BAN_CLIENT: 'I cannot ban myself.',
			COMMAND_BAN_NO_PERMS: (user) => `You don't have permission to ban ${user}.`,
			COMMAND_KICK_DESCRIPTION: 'Kicks a mentioned user and logs the reason.',
			COMMAND_KICK_NO_KICK_SELF: 'You cannot kick yourself.',
			COMMAND_KICK_NO_KICK_CLIENT: 'I cannot kick myself.',
			COMMAND_KICK_NO_PERMS: (user) => `You don't have permission to kick ${user}.`,
			COMMAND_MUTE_DESCRIPTION: 'Mutes a mentioned user and logs the reason.',
			COMMAND_MUTE_NO_MUTE_SELF: 'You cannot mute yourself.',
			COMMAND_MUTE_NO_MUTE_CLIENT: 'I cannot mute myself.',
			COMMAND_MUTE_NO_PERMS: (user) => `You don't have permission to mute ${user}.`,
			COMMAND_PURGE_DESCRIPTION: 'Removes X amount of messages, optionally sent by Y user. Append the word \'all\' to ignore the role hierarchy.',
			COMMAND_PURGE_NO_PERMS: (member) => `You don't have permission to purge messages from ${member}.`,
			COMMAND_SENDMSG_DESCRIPTION: 'Sends a message to the specified channel or user as the bot.',
			COMMAND_SERVERINFO_DESCRIPTION: 'Displays server information.',
			COMMAND_SERVERINFO_ID: 'ID',
			COMMAND_SERVERINFO_NAME: 'Name',
			COMMAND_SERVERINFO_OWNER: 'Owner',
			COMMAND_SERVERINFO_MEMBERS: 'Members',
			COMMAND_SERVERINFO_CHANNELS: 'Channels',
			COMMAND_SERVERINFO_EMOJIS: 'Emojis',
			COMMAND_SERVERINFO_ROLES: 'Roles',
			COMMAND_SERVERINFO_REGION: 'Region',
			COMMAND_SERVERINFO_CREATED: 'Created',
			COMMAND_SOFTBAN_DESCRIPTION: 'Bans a mentioned user and logs the reason.',
			COMMAND_SOFTBAN_NO_SOFTBAN_SELF: 'You cannot softban yourself.',
			COMMAND_SOFTBAN_NO_SOFTBAN_CLIENT: 'I cannot softban myself.',
			COMMAND_SOFTBAN_SOFTBAN_RELEASED: 'Softban released.',
			COMMAND_SOFTBAN_NO_PERMS: (user) => `You don't have permission to ban ${user}.`,
			COMMAND_UNMUTE_DESCRIPTION: 'Unmutes a mentioned user.',
			COMMAND_UNMUTE_NO_UNMUTE_SELF: 'You cannot unmute yourself.',
			COMMAND_UNMUTE_NO_UNMUTE_CLIENT: 'I cannot unmute myself.',
			COMMAND_UNMUTE_NO_PERMS: (user) => `You don't have permission to unmute ${user}.`,
			COMMAND_USERINFO_DESCRIPTION: 'Get information on a mentioned user.',
			COMMAND_USERINFO_NAME: 'Name',
			COMMAND_USERINFO_ID: 'ID',
			COMMAND_USERINFO_REGISTERED: 'Registered',
			COMMAND_USERINFO_JOINED: 'Joined',
			COMMAND_USERINFO_STATUS: 'Status',
			COMMAND_USERINFO_ACTIVITY: (user) => `${this.presenceTypes[user.presence.activity.type]}`,
			COMMAND_USERINFO_ROLES: 'Roles',
			COMMAND_VCBAN_DESCRIPTION: 'Bans a mentioned user from voice chat and logs the reason.',
			COMMAND_VCBAN_NO_VCBAN_SELF: 'You cannot ban yourself from voice chat.',
			COMMAND_VCBAN_NO_VCBAN_CLIENT: 'I cannot ban myself from voice chat.',
			COMMAND_VCBAN_NO_PERMS: (user) => `You don't have permission to ban ${user} from voice chat.`,
			COMMAND_VCKICK_DESCRIPTION: 'Kicks a mentioned user from voice chat and logs the reason.',
			COMMAND_VCKICK_NO_VCKICK_SELF: 'You cannot kick yourself from voice chat.',
			COMMAND_VCKICK_NO_VCKICK_CLIENT: 'I cannot kick myself from voice chat.',
			COMMAND_VCKICK_NO_PERMS: (user) => `You don't have permission to kick ${user} from voice chat.`,
			COMMAND_VCUNBAN_DESCRIPTION: 'Unbans a mentioned user from voice chat.',
			COMMAND_VCUNBAN_NO_VCUNBAN_SELF: 'You cannot unban yourself from voice chat.',
			COMMAND_VCUNBAN_NO_VCUNBAN_CLIENT: 'I cannot unban myself from voice chat.',
			COMMAND_VCUNBAN_NO_PERMS: (user) => `You don't have permission to unban ${user} from voice chat.`,
			COMMAND_WARN_DESCRIPTION: 'Warns a mentioned user and logs the reason.',
			COMMAND_WARN_NO_WARN_SELF: 'You cannot warn yourself.',
			COMMAND_WARN_NO_WARN_CLIENT: 'I cannot warn myself.',
			COMMAND_WARN_NO_PERMS: (user) => `You don't have permission to warn ${user}.`,
			COMMAND_8BALL_DESCRIPTION: 'Magic 8-ball, does exactly what the toy does, memes included.',
			COMMAND_CHOICE_DESCRIPTION: 'Makes a decision based off of the choices given, no matter how many you include.',
			COMMAND_COINFLIP_DESCRIPTION: 'Flips a coin. 🙂 for heads, 🙃 for tails.',
			COMMAND_JOINDATE_DESCRIPTION: 'Displays your account creation date along with the date you joined the current server you\'re on. Other users can be specified to fetch their account creation and server join dates.', // eslint-disable-line max-len
			COMMAND_QUOTE_DESCRIPTION: 'Quotes a message by ID.',
			COMMAND_QUOTE_NO_MESSAGE_FOUND: (messageID, origin) => `Could not find a message with ID of \`${messageID}\` in ${origin}`,
			COMMAND_ROLES_DESCRIPTION: 'Series of commands to allow you to join roles by yourself.',
			COMMAND_ROLES_EXTENDED: 'list - Lists joinable roles and ther member counts. :: add - Adds a role by its name. :: remove - Removes a role by its name.',
			COMMAND_ROLES_NONE_JOINABLE: 'There are no joinable roles on this server.',
			COMMAND_ROLES_NO_ROLE_NAME: 'Please specify a role by its name.',
			COMMAND_ROLES_NO_MODERATE: 'You don\'t have permission to change the roles of other users.',
			COMMAND_ROLES_NO_PERMS: (target) => `You are not allowed to moderate ${target}.`,
			COMMAND_ROLES_DOES_NOT_EXIST: (roleName) => `Sorry, the role \`${roleName}\` does not exist in this server. Please check to make sure you spelled it correctly.`,
			COMMAND_ROLES_NOT_JOINABLE: (roleName) => `The role \`${roleName}\` is not joinable in this server.`,
			COMMAND_ROLES_ALREADY_HAVE: (roleName, target) => `${target} already has the role \`${roleName}\`.`,
			COMMAND_ROLES_NOT_LEAVABLE: (roleName) => `You're not allowed to remove the role \`${roleName}\`.`,
			COMMAND_ROLES_DOES_NOT_HAVE: (roleName, target) => `${target} does not have the role \`${roleName}\`.`,

			MESSAGE_PROMPT_TIMEOUT: 'The prompt has timed out.',

			GUILD_LOG_REASON: 'Reason',
			GUILD_LOG_MESSAGE: 'Message',
			GUILD_LOG_BEFORE: 'Before',
			GUILD_LOG_AFTER: 'After',
			GUILD_LOG_EMOJI: 'Emoji',
			GUILD_LOG_UPDATE_NAME: 'Name changed',
			GUILD_LOG_MESSAGEDELETE: 'Message deleted',
			GUILD_LOG_MESSAGEUPDATE: 'Message edited',
			GUILD_LOG_MESSAGEPURGE: 'Messages purged',
			GUILD_LOG_MESSAGEPURGE_AMOUNT: 'Amount of messages removed:',
			GUILD_LOG_MESSAGEPURGE_TARGET: 'Purged messages from:',
			GUILD_LOG_ROLECREATE: 'Role created',
			GUILD_LOG_ROLECREATE_V_ID: 'ID',
			GUILD_LOG_ROLECREATE_V_JOINED: 'Tag',
			GUILD_LOG_ROLEDELETE: 'Role deleted',
			GUILD_LOG_ROLEDELETE_V_ID: 'ID',
			GUILD_LOG_ROLEUPDATE: 'Role updated',
			GUILD_LOG_ROLEUPDATE_COLOR: 'Color changed',
			GUILD_LOG_ROLEUPDATE_HOIST: 'Hoist toggled',
			GUILD_LOG_ROLEUPDATE_MENTIONABLE: 'Mentionable toggled',
			GUILD_LOG_ROLEUPDATE_PERMISSIONS: 'Permissions changed',
			GUILD_LOG_CHANNELCREATE: 'Channel created',
			GUILD_LOG_CHANNELCREATE_VOICE: 'Voice channel created',
			GUILD_LOG_CHANNELCREATE_V_ID: 'ID',
			GUILD_LOG_CHANNELCREATE_V_PARENT: 'Category',
			GUILD_LOG_CHANNELDELETE: 'Channel deleted',
			GUILD_LOG_CHANNELDELETE_VOICE: 'Voice channel deleted',
			GUILD_LOG_CHANNELUPDATE: 'Channel updated',
			GUILD_LOG_CHANNELUPDATE_VOICE: 'Voice channel updated',
			GUILD_LOG_CHANNELUPDATE_NSFW: 'NSFW toggled',
			GUILD_LOG_CHANNELUPDATE_TOPIC: 'Topic changed',
			GUILD_LOG_CHANNELUPDATE_CATEGORY: 'Category changed',
			GUILD_LOG_CHANNELUPDATE_POSITIION: 'Position changed',
			GUILD_LOG_EMOJICREATE: 'Emoji created',
			GUILD_LOG_EMOJICREATE_V_ID: 'ID',
			GUILD_LOG_EMOJIDELETE: 'Emoji deleted',
			GUILD_LOG_EMOJIDELETE_V_ID: 'ID',
			GUILD_LOG_EMOJIUPDATE: 'Emoji updated',
			GUILD_LOG_GUILDBANADD: 'User banned',
			GUILD_LOG_GUILDBANREMOVE: 'User unbanned',
			GUILD_LOG_GUILDMEMBERADD: 'User joined',
			GUILD_LOG_GUILDMEMBERADD_V_REGISTERED: 'Registered',
			GUILD_LOG_GUILDMEMBERADD_V_JOINED: 'Joined',
			GUILD_LOG_GUILDMEMBERREMOVE: 'User left',
			GUILD_LOG_GUILDMEMBERKICK: 'User kicked',
			GUILD_LOG_GUILDMEMBERMUTE: 'User muted',
			GUILD_LOG_GUILDSOFTBANADD: 'User softbanned',
			GUILD_LOG_GUILDMEMBERUNMUTE: 'User unmuted',
			GUILD_LOG_GUILDMEMBERVCBAN: 'User banned from voice chat',
			GUILD_LOG_GUILDMEMBERWARN: 'Warning issued',
			GUILD_LOG_MEMBERUPDATE: 'User updated',
			GUILD_LOG_MEMBERUPDATE_DISPLAYNAME: 'Nickname changed',
			GUILD_LOG_AUTOSELENER: 'Changed name with blacklisted word',
			GUILD_LOG_BLACKLISTEDWORD: (channel) => `Blacklisted word detected in ${channel}.`,

			GLOBAL_LOG_GUILDCREATE: 'Bot added to guild',
			GLOBAL_LOG_GUILDDELETE: 'Bot removed from guild',
			GLOBAL_LOG_GUILDUPDATED: 'Guild name changed',
			GLOBAL_LOG_UPDATE_NAME: 'Name changed',
			GLOBAL_LOG_GUILDUNAVAILABLE: 'Guild unavailable, likely due to a server outage',
			GLOBAL_LOG_COMMANDRUN: 'Command ran'
		};
	}

	async init() {
		await super.init();
	}

};
